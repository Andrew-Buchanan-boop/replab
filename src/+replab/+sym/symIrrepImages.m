function [SA SB NA NB OA OB] = symIrrepImages(partition)
% Return matrices for an irreducible representation of S(n)
%
% Representations of S(n) are indexed by Young diagrams. Here,
% we represent Young diagrams as a partition [n1 ... nk] where
% n = n1 + ... + nk, and n1...nk represent the number of blocks
% on each row of the Young diagram.
%
% We consider the symmetric group S(n) as generated by two
% generators:
%
% - 'a' is a cyclic permutation i -> i + 1
% - 'b' is the transposition of 1 and 2
%
% Returns
% -------
%   SA: double
%     Specht representation image of 'a'
%   SB: double
%     Specht representation image of 'b'
%   NA: double
%     Young seminormal representation image of 'a'
%   NB: double
%     Young seminormal representation image of 'a'
%   OA: double
%     Young orthogonal representation image of 'a'
%   OB: double
%     Young orthogonal representation image of 'b'
%
% Author: Serene Shum

    ssqrt = @(x) sqrt(sym(x));

    SB = []; %Specht rep of (1 2)
    SA = []; %Specht rep of (1 2 ... n)
    NB = []; %semi-normal rep of (1 2)
    NA = []; %semi-normal rep of (1 2 ... n)
    OB = []; %orthogonal rep of (1 2)
    OA = []; %orthogonal rep of (1 2 ... n)

    if isequal(partition,[1]) %trivial

        SB = [1];
        SA = [1];
        NB = [1];
        NA = [1];
        OB = [1];
        OA = [1];

        %S2

    elseif isequal(partition,[2]) %trivial
        SB = [1];
        SA = [1];
        NB = [1];
        NA = [1];
        OB = [1];
        OA = [1];

    elseif isequal(partition,[1 1]) %sign
        SB = [-1];
        SA = [-1];
        NB = [-1];
        NA = [-1];
        OB = [-1];
        OA = [-1];

        %S3

    elseif isequal(partition,[3]) %trivial
        SB = [1];
        SA = [1];
        NB = [1];
        NA = [1];
        OB = [1];
        OA = [1];

    elseif isequal(partition,[2 1]) %standard
        SB = [0 -1; -1 0];
        SA = [-1 1; -1 0];
        NB = [1 0; 0 -1];
        NA = sym([-1 3; -1 -1])/2;
        OB = [1 0; 0 -1];
        OA = sym([-1 ssqrt(3); -ssqrt(3) -1])/2;

    elseif isequal(partition,[1 1 1]) %sign
        SB = [-1];
        SA = [1];
        NB = [-1];
        NA = [1];
        OB = [-1];
        OA = [1];

        %S4

    elseif isequal(partition,[4]) %trivial
        SB = [1];
        SA = [1];
        NB = [1];
        NA = [1];
        OB = [1];
        OA = [1];

    elseif isequal(partition,[3 1])%standard
        SB = [0 -1 0; -1 0 0; 0 0 1];
        SA = [-1 1 -1; -1 0 0; 0 -1 0];
        NB = [1 0 0; 0 1 0; 0 0 -1];
        NA = sym([-2 8 0; -2 -1 9; -2 -1 -3])/6;
        OB = [1 0 0; 0 1 0; 0 0 -1];
        OA = sym([-2 4*ssqrt(2) 0; -2*ssqrt(2) -1 3*ssqrt(3); -2*ssqrt(6) -ssqrt(3) -3])/6;

    elseif isequal(partition,[2 1 1]) %product of standard & sign
        SB = [-1 0 0; 0 0 -1; 0 -1 0];
        SA = [1 -1 0; 1 0 -1; 1 0 0];
        NB = [1 0 0; 0 -1 0; 0 0 -1];
        NA = sym([3 -3 12; 3 1 -4; 0 4 2])/6;
        OB = [1 0 0; 0 -1 0; 0 0 -1];
        OA = sym([3 -ssqrt(3) 2*ssqrt(6); 3*ssqrt(3) 1 -2*ssqrt(2); 0 4*ssqrt(2) 2])/6;

    elseif isequal(partition,[2 2]) %2D irrep of S4
        SB = [1 0; 1 -1];
        SA = [-1 1; 0 1];
        NB = [1 0; 0 -1];
        NA = sym([-1 -3; -1 1])/2;
        OB = [1 0; 0 -1];
        OA = sym([-1 -ssqrt(3); -ssqrt(3) 1])/2;

    elseif isequal(partition,[1 1 1 1])%sign
        SB = [-1];
        SA = [-1];
        NB = [-1];
        NA = [-1];
        OB = [-1];
        OA = [-1];

        %S5

    elseif isequal(partition,[5]) %trivial
        SB = [1];
        SA = [1];
        NB = [1];
        NA = [1];
        OB = [1];
        OA = [1];

    elseif isequal(partition,[1 1 1 1 1]) %sign
        SB = [-1];
        SA = [1];
        NB = [-1];
        NA = [1];
        OB = [-1];
        OA = [1];

    elseif isequal(partition,[4 1]) %standard
        SB = [0 -1 0 0; -1 0 0 0; 0 0 1 0; 0 0 0 1];
        SA = [-1 1 -1 1; -1 0 0 0; 0 -1 0 0; 0 0 -1 0];
        NB = [1 0 0 0; 0 1 0 0; 0 0 1 0; 0 0 0 -1];
        NA = sym([-3 15 0 0; -3 -1 16 0; -3 -1 -2 18; -3 -1 -2 -6])/12;
        OB = [1 0 0 0; 0 1 0 0; 0 0 1 0; 0 0 0 -1];
        OA = sym([-3 3*ssqrt(15) 0 0; -ssqrt(15) -1 8*ssqrt(2) 0; -ssqrt(30) -ssqrt(2) -2 6*ssqrt(3); -ssqrt(90) -ssqrt(6) -2*ssqrt(3) -6])/12;

    elseif isequal(partition,[3 2]) %5D irrep
        SB = [1 0 0 0 0; 0 0 0 -1 0; -1 0 0 0 -1; 0 -1 0 0 0; -1 0 -1 0 0];
        SA = [-1 1 -1 0 0; 0 0 0 1 -1; 0 0 1 0 -1; 1 0 0 0 0; 1 0 1 0 0];
        NB = [1 0 0 0 0; 0 1 0 0 0; 0 0 -1 0 0; 0 0 0 1 0; 0 0 0 0 -1];
        NA = [-1/3 -2/3 0 2 0; -1/3 1/12 -3/4 -1/4 9/4; -1/3 1/12 1/4 -1/4 -3/4; 0 -1/4 -3/4 -1/4 -3/4; 0 -1/4 1/4 -1/4 1/4];
        OB = [1 0 0 0 0; 0 1 0 0 0; 0 0 -1 0 0; 0 0 0 1 0; 0 0 0 0 -1];
        OA = [-1/3 -ssqrt(2)/3 0 ssqrt(6)/3 0; -ssqrt(2)/3 1/12 -ssqrt(3)/4 -ssqrt(3)/12 3/4; -ssqrt(6)/3 ssqrt(3)/12 1/4 -1/4 -ssqrt(3)/4; 0 -ssqrt(3)/4 -3/4 -1/4 -ssqrt(3)/4; 0 -3/4 ssqrt(3)/4 -ssqrt(3)/4 1/4];

    elseif isequal(partition,[2 2 1]) %5D irrep
        SB = [0 0 -1 0 0; 0 0 0 -1 0; -1 0 0 0 0; 0 -1 0 0 0; 0 0 0 0 -1];
        SA = [1 -1 -1 1 0; 0 -1 -1 0 1; 1 -1 0 0 0; 0 -1 0 0 0; 1 -1 -1 0 0];
        NB = [1 0 0 0 0; 0 -1 0 0 0; 0 0 1 0 0; 0 0 0 -1 0; 0 0 0 0 1];
        NA = sym([3 9 -9 -27 0; 3 -3 -9 9 0; 3 -3 3 -3 -24; 3 1 3 1 8; 0 4 0 4 -4])/12;
        OB = [1 0 0 0 0; 0 -1 0 0 0; 0 0 1 0 0; 0 0 0 -1 0; 0 0 0 0 1];
        OA = sym([3 3*ssqrt(3) -3*ssqrt(3) -9 0; 3*ssqrt(3) -3 -9 3*ssqrt(3) 0; 3*ssqrt(3) -3 3 -ssqrt(3) -4*ssqrt(6); 9 ssqrt(3) 3*ssqrt(3) 1 4*ssqrt(2); 0 4*ssqrt(6) 0 4*ssqrt(2) -4])/12;

    elseif isequal(partition, [3 1 1]) %exterior square of standard rep
        SB = [-1 0 0 0 0 0; 0 0 0 -1 0 0; 0 0 0 0 -1 0; 0 -1 0 0 0 0; 0 0 -1 0 0 0; 0 0 0 0 0 1];
        SA = [1 -1 1 0 0 0; 1 0 0 -1 1 0; 0 1 0 -1 0 1; 1 0 0 0 0 0; 0 1 0 0 0 0; 0 0 0 1 0 0];
        NB = [1 0 0 0 0 0; 0 1 0 0 0 0; 0 0 -1 0 0 0; 0 0 0 1 0 0; 0 0 0 0 -1 0; 0 0 0 0 0 -1];
        NA = sym([8 -8 0 40 0 0; 8 1 -9 -5 45 0; 8 1 3 -5 -15 0; 0 9 -9 3 -3 48; 0 9 3 3 1 -16; 0 0 12 0 4 8])/24;
        OB = [1 0 0 0 0 0; 0 1 0 0 0 0; 0 0 -1 0 0 0; 0 0 0 1 0 0; 0 0 0 0 -1 0; 0 0 0 0 0 -1];
        OA = sym([8 -4*ssqrt(2) 0 4*ssqrt(30) 0 0; 8*ssqrt(2) 1 -3*ssqrt(3) -ssqrt(15) 3*ssqrt(45) 0; 8*ssqrt(6) ssqrt(3) 3 -ssqrt(45) -3*ssqrt(15) 0; 0 3*ssqrt(15) -ssqrt(45) 3 -ssqrt(3) 8*ssqrt(6); 0 3*ssqrt(45) ssqrt(15) 3*ssqrt(3) 1 -8*ssqrt(2); 0 0 4*ssqrt(30) 0 4*ssqrt(2) 8])/24;
    end
    if ~isa(SA, 'sym')
        SA = sym(SA, 'r');
    end
    if ~isa(SB, 'sym')
        SB = sym(SB, 'r');
    end
    if ~isa(NA, 'sym')
        NA = sym(NA, 'r');
    end
    if ~isa(NB, 'sym')
        NB = sym(NB, 'r');
    end
    if ~isa(OA, 'sym')
        OA = sym(OA, 'r');
    end
    if ~isa(OB, 'sym')
        OB = sym(OB, 'r');
    end
end
